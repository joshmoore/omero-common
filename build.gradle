plugins {
    id 'java-library'
    id 'maven-publish'
}

group 'org.openmicroscopy'
version '5.5.0-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url 'http://artifacts.openmicroscopy.org/artifactory/maven/'
    }
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.testng', name: 'testng', version: '6.14.2'
    testCompile group: 'jmock', name: 'jmock', version: '1.+'
    testCompile group: 'com.jamonapi', name: 'jamon', version: '2.81'

    api 'org.openmicroscopy:omero-model:5.5.0-SNAPSHOT'
    implementation 'com.codahale.metrics:metrics-graphite:3.0.2'
    implementation 'com.codahale.metrics:metrics-jvm:3.0.2'
    implementation 'com.codahale.metrics:metrics-logback:3.0.2'
}

test {
    // enable TestNG support (default is JUnit)
    useTestNG() {
        suites "src/test/resources/unit.testng.xml"
    }
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
}

ext {
    artifactory_user = project.hasProperty('artifactory_user') ? project.getProperty('artifactory_user') : ''
    artifactory_pass = project.hasProperty('artifactory_pass') ? project.getProperty('artifactory_pass') : ''
}

publishing {
    repositories {
      maven {
        def releaseRepoUrl = 'https://artifacts.openmicroscopy.org/artifactory/ome.staging/'
        def snapshotsRepoUrl = 'https://artifacts.openmicroscopy.org/artifactory/ome.snapshots/'
        url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        // Deploy to artifactory with: ./gradlew publish -P artifactory_user=$USER -P artifactory_pass=$PASS
        credentials {
          username project.artifactory_user
          password project.artifactory_pass
        }
      }
    }
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourceJar {
                classifier "sources"
            }
        }
    }
}
